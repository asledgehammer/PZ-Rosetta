# zombie.characters.BodyDamage.Fitness
package: zombie.characters.BodyDamage
type: class
name: Fitness
extends: Object
modifiers:
  - public
  - final
constructors:
  - name: Fitness
    modifiers:
      - public
    parameters:
      - name: parent
        type: IsoGameCharacter
methods:
  - name: exerciseRepeat
    modifiers:
      - public
    return:
      type: void
  - name: getCurrentExeStiffnessInc
    modifiers:
      - public
    return:
      type: float
    parameters:
      - name: type
        type: String
  - name: getCurrentExeStiffnessTimer
    modifiers:
      - public
    return:
      type: int
    parameters:
      - name: type
        type: String
  - name: getParent
    modifiers:
      - public
    return:
      type: IsoGameCharacter
  - name: getRegularity
    modifiers:
      - public
    return:
      type: float
    parameters:
      - name: type
        type: String
  - name: getRegularityMap
    modifiers:
      - public
    return:
      type: HashMap
      generic: HashMap<String,Float>
  - name: incFutureStiffness
    modifiers:
      - public
    return:
      type: void
    notes: >-
      We setup a timer after finishing an exercice, 12h after, we gonna start to
      increase stiffness (add pains in muscles)
       When adding the stiffness, we decrease slowly our vars while increasing pain, untill no more stiffness is to be added.
       Stiffness induced will depend on regularity, fatigue.
       Numbers approx: At 0 regularity, 60min exercises should gives almost 4h of stiffness (gets additional pain)
  - name: incRegularity
    modifiers:
      - public
    return:
      type: void
    notes: >-
      Increase the regularity when you've done a repeat of an exercice
       Depend on fitness (using logarithm), the more fitness, the LESS regularity you get
       Regularity will influence on the stiffness you get once you've finished an exercise
  - name: incStats
    modifiers:
      - public
    return:
      type: void
  - name: init
    modifiers:
      - public
    return:
      type: void
  - name: initRegularityMapProfession
    modifiers:
      - public
    return:
      type: void
  - name: load
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: input
        type: ByteBuffer
      - name: WorldVersion
        type: int
  - name: onGoingStiffness
    modifiers:
      - public
    return:
      type: boolean
  - name: reduceEndurance
    modifiers:
      - public
    return:
      type: void
    notes: Reduce endurance, using metabolics (to know what kind of exercise it is,
      some are more exhausting than others), regularity, current carrying
      weight.
  - name: removeStiffnessValue
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: type
        type: String
  - name: resetValues
    modifiers:
      - public
    return:
      type: void
  - name: save
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: output
        type: ByteBuffer
  - name: setCurrentExercise
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: type
        type: String
  - name: setParent
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: parent
        type: IsoGameCharacter
  - name: setRegularityMap
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: regularityMap
        type: HashMap
        generic: HashMap<String,Float>
  - name: update
    modifiers:
      - public
    return:
      type: void
    notes: We update every 10 in game minutes to facilitate calculs
