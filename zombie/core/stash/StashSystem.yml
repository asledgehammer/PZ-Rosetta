# zombie.core.stash.StashSystem
package: zombie.core.stash
type: class
name: StashSystem
extends: Object
modifiers:
  - public
  - final
fields:
  - name: allStashes
    modifiers:
      - public
      - static
    return:
      type: ArrayList
      generic: ArrayList<Stash>
  - name: buildingsToDo
    modifiers:
      - public
      - static
    return:
      type: ArrayList
      generic: ArrayList<StashBuilding>
  - name: possibleStashes
    modifiers:
      - public
      - static
    return:
      type: ArrayList
      generic: ArrayList<StashBuilding>
constructors:
  - name: StashSystem
    modifiers:
      - public
methods:
  - name: checkStashItem
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: item
        type: InventoryItem
    notes: check if the spawned item could be a stash item (map or note...)
  - name: doBuildingStash
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: def
        type: BuildingDef
    notes: Fetch our list of building in which we'll spawn stash, if this building
      correspond, we do the necessary stuff
  - name: doStashItem
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: stash
        type: Stash
      - name: item
        type: InventoryItem
    notes: Public for lua debug stash map
  - name: getPossibleStashes
    modifiers:
      - public
      - static
    return:
      type: ArrayList
      generic: ArrayList<StashBuilding>
  - name: getStash
    modifiers:
      - public
      - static
    return:
      type: Stash
    parameters:
      - name: stashName
        type: String
  - name: init
    modifiers:
      - public
      - static
    return:
      type: void
  - name: initAllStashes
    modifiers:
      - public
      - static
    return:
      type: void
    notes: Load our different stashes description from lua files in
      "media/lua/shared/StashDescriptions"
  - name: load
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: input
        type: ByteBuffer
      - name: WorldVersion
        type: int
  - name: prepareBuildingStash
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: stashName
        type: String
    notes: Used when you read an annoted map
  - name: reinit
    modifiers:
      - public
      - static
    return:
      type: void
  - name: Reset
    modifiers:
      - public
      - static
    return:
      type: void
  - name: save
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: output
        type: ByteBuffer
  - name: visitedBuilding
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: def
        type: BuildingDef
    notes: Check if the visited building is in one of our random stash, in that case
      we won't spawn any stash for this building
