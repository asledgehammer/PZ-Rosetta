# zombie.core.utils.FibonacciHeap&lt;T&gt;
package: zombie.core.utils
type: class
name: FibonacciHeap&lt;T&gt;
extends: Object
modifiers:
  - public
  - final
constructors:
  - name: FibonacciHeap
    modifiers:
      - public
methods:
  - name: decreaseKey
    modifiers:
      - public
    returnType: void
    parameters:
      - name: entry
        type: FibonacciHeap.Entry
        notes: The element whose priority should be decreased.
      - name: newPriority
        type: double
    notes: |-
      Decreases the key of the specified element to the new priority.  If the
       new priority is greater than the old priority, this function throws an
       IllegalArgumentException.  The new priority must be a finite double,
       so you cannot set the priority to be NaN, or +/- infinity.  Doing
       so also throws an IllegalArgumentException.

       It is assumed that the entry belongs in this heap.  For efficiency
       reasons, this is not checked at runtime.
  - name: delete
    modifiers:
      - public
    returnType: void
    parameters:
      - name: threadID
        type: int
      - name: node
        type: IsoGridSquare
  - name: dequeueMin
    modifiers:
      - public
    returnType: FibonacciHeap.Entry
    notes: |-
      Dequeues and returns the minimum element of the Fibonacci heap.  If the
       heap is empty, this throws a NoSuchElementException.
  - name: empty
    modifiers:
      - public
    returnType: void
  - name: enqueue
    modifiers:
      - public
    returnType: FibonacciHeap.Entry
    parameters:
      - name: value
        type: T
        notes: The value to insert.
      - name: priority
        type: double
    notes: |-
      Inserts the specified element into the Fibonacci heap with the specified
       priority.  Its priority must be a valid double, so you cannot set the
       priority to NaN.
  - name: isEmpty
    modifiers:
      - public
    returnType: boolean
    notes: Returns whether the heap is empty.
  - name: merge
    modifiers:
      - public
      - static
    returnType: FibonacciHeap
    parameters:
      - name: one
        type: FibonacciHeap
        notes: The first Fibonacci heap to merge.
      - name: two
        type: FibonacciHeap
    notes: |-
      Given two Fibonacci heaps, returns a new Fibonacci heap that contains
       all of the elements of the two heaps.  Each of the input heaps is
       destructively modified by having all its elements removed.  You can
       continue to use those heaps, but be aware that they will be empty
       after this call completes.
  - name: min
    modifiers:
      - public
    returnType: FibonacciHeap.Entry
    notes: |-
      Returns an Entry object corresponding to the minimum element of the
       Fibonacci heap, throwing a NoSuchElementException if the heap is
       empty.
  - name: size
    modifiers:
      - public
    returnType: int
    notes: Returns the number of elements in the heap.
