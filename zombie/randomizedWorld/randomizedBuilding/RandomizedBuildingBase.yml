# zombie.randomizedWorld.randomizedBuilding.RandomizedBuildingBase
package: zombie.randomizedWorld.randomizedBuilding
type: class
name: RandomizedBuildingBase
extends: RandomizedWorldBase
modifiers:
  - public
constructors:
  - name: RandomizedBuildingBase
    modifiers:
      - public
methods:
  - name: addBarricade
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: sq
        type: IsoGridSquare
      - name: numPlanks
        type: int
  - name: addRandomRangedWeapon
    modifiers:
      - public
    return:
      type: HandWeapon
    parameters:
      - name: container
        type: ItemContainer
      - name: addBulletsInGun
        type: boolean
      - name: addBoxInContainer
        type: boolean
      - name: attachPart
        type: boolean
  - name: addWorldItem
    modifiers:
      - public
    return:
      type: InventoryItem
    parameters:
      - name: item
        type: String
      - name: sq
        type: IsoGridSquare
      - name: obj
        type: IsoObject
  - name: addWorldItem
    modifiers:
      - public
    return:
      type: InventoryItem
    parameters:
      - name: item
        type: String
      - name: sq
        type: IsoGridSquare
      - name: xoffset
        type: float
      - name: yoffset
        type: float
      - name: zoffset
        type: float
  - name: addWorldItem
    modifiers:
      - public
    return:
      type: InventoryItem
    parameters:
      - name: item
        type: String
      - name: sq
        type: IsoGridSquare
      - name: xoffset
        type: float
      - name: yoffset
        type: float
      - name: zoffset
        type: float
      - name: worldZ
        type: int
  - name: addZombies
    modifiers:
      - public
    return:
      type: ArrayList
      generic: ArrayList<IsoZombie>
    parameters:
      - name: def
        type: BuildingDef
        notes: buildingDef
      - name: totalZombies
        type: int
      - name: outfit
        type: String
      - name: femaleChance
        type: Integer
      - name: room
        type: RoomDef
    notes: |-
      If you specify a outfit, make sure it works for both gender! (or force
       femaleChance to 0 or 1 if it's gender-specific)
  - name: addZombiesOnSquare
    modifiers:
      - public
    return:
      type: ArrayList
      generic: ArrayList<IsoZombie>
    parameters:
      - name: totalZombies
        type: int
      - name: outfit
        type: String
      - name: femaleChance
        type: Integer
      - name: square
        type: IsoGridSquare
  - name: ChunkLoaded
    modifiers:
      - public
      - static
    return:
      type: void
    parameters:
      - name: building
        type: IsoBuilding
  - name: getChance
    modifiers:
      - public
    return:
      type: int
  - name: getDoor
    modifiers:
      - public
    return:
      type: IsoDoor
    parameters:
      - name: sq
        type: IsoGridSquare
  - name: getMinimumDays
    modifiers:
      - public
    return:
      type: int
  - name: getMinimumRooms
    modifiers:
      - public
    return:
      type: int
  - name: getWindow
    modifiers:
      - public
    return:
      type: IsoWindow
    parameters:
      - name: sq
        type: IsoGridSquare
  - name: init
    modifiers:
      - public
    return:
      type: void
  - name: initAllRBMapChance
    modifiers:
      - public
      - static
    return:
      type: void
  - name: isAlwaysDo
    modifiers:
      - public
    return:
      type: boolean
  - name: isTableFor3DItems
    modifiers:
      - public
    return:
      type: boolean
    parameters:
      - name: obj
        type: IsoObject
      - name: sq
        type: IsoGridSquare
  - name: isValid
    modifiers:
      - public
    return:
      type: boolean
    parameters:
      - name: def
        type: BuildingDef
      - name: force
        type: boolean
    notes: >-
      Don't do any building change in a player's building Also check if the
       building have a bathroom, a kitchen and a bedroom
       This is ignored for the alwaysDo building (so i can do stuff in spiffo, pizzawhirled, etc..)
  - name: randomizeBuilding
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: def
        type: BuildingDef
  - name: setAlwaysDo
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: alwaysDo
        type: boolean
  - name: setChance
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: chance
        type: int
  - name: setMinimumDays
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: minimumDays
        type: int
  - name: setMinimumRooms
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: minimumRooms
        type: int
  - name: spawnItemsInContainers
    modifiers:
      - public
    return:
      type: void
    parameters:
      - name: def
        type: BuildingDef
      - name: distribName
        type: String
      - name: chance
        type: int
