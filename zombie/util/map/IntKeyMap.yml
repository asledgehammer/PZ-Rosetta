# zombie.util.map.IntKeyMap
package: zombie.util.map
type: interface
name: IntKeyMap
generic: IntKeyMap<V>
modifiers:
  - public
notes: This interface represents maps from int values to objects.
methods:
  - name: clear
    return:
      type: void
    notes: Clears this map.
  - name: containsKey
    return:
      type: boolean
      notes: |-
        true if this map contains a mapping from
                      the specified key; returns false
                      otherwise.
    parameters:
      - name: key
        type: int
        notes: the key to test for.
    notes: |-
      Indicates whether this map contains a mapping from a specified
        key.
  - name: containsValue
    return:
      type: boolean
      notes: |-
        true if this map contains at least one
                      mapping to the specified value; returns
                      false otherwise.
    parameters:
      - name: value
        type: Object
        notes: the value to test for.
    notes: |-
      Indicates whether this map contains a mapping to a specified
        value.
  - name: entries
    return:
      type: IntKeyMapIterator
      generic: IntKeyMapIterator<V>
      notes: an iterator over the entries of this map.
    notes: |-
      Returns an iterator over the entries of this map. It is
        possible to remove entries from this map using the iterator
        provided that the concrete map supports removal of
        entries.
  - name: equals
    return:
      type: boolean
      notes: |-
        true if this map is equal to the
                      specified object; returns false
                      otherwise.
    parameters:
      - name: obj
        type: Object
        notes: the object with which to compare this map.
    notes: Indicates whether this map is equal to some object.
  - name: get
    return:
      type: V
      notes: |-
        the value that the specified key maps to; returns
                      null, if no mapping exists for the
                      specified key.
    parameters:
      - name: key
        type: int
        notes: the key to map to a value.
    notes: Maps a specified key to a value.
  - name: hashCode
    return:
      type: int
      notes: a hash code value for this map.
    notes: Returns a hash code value for this map.
  - name: isEmpty
    return:
      type: boolean
      notes: |-
        true if this map is empty; returns
                      false otherwise.
    notes: Indicates whether this map is empty.
  - name: keySet
    return:
      type: IntSet
      notes: a set view of the keys of this map.
    notes: |-
      Returns a set view of the keys of this map. The set is not
        directly modifiable, but changes to the map are reflected in
        the set.
  - name: put
    return:
      type: V
      notes: |-
        the old value (which can be null) if a
                      mapping from the specified key already existed
                      in this map; returns null otherwise.
    parameters:
      - name: key
        type: int
        notes: the key of the mapping to add to this map.
      - name: value
        type: V
    notes: |-
      Adds a mapping from a specified key to a specified value to
        this map. If a mapping already exists for the specified key
        it is overwritten by the new mapping.
  - name: putAll
    return:
      type: void
    parameters:
      - name: map
        type: IntKeyMap
        generic: IntKeyMap<V>
        notes: the map whose mappings to add to this map.
    notes: |-
      Adds all mappings from a specified map to this map. Any
        existing mappings whose keys collide with a new mapping is
        overwritten by the new mapping.
  - name: remove
    return:
      type: V
      notes: |-
        the old value (which can be null) if a
                      mapping from the specified key already existed
                      in this map; returns null otherwise.
    parameters:
      - name: key
        type: int
        notes: the key whose mapping to remove from this map.
    notes: Removes the mapping from a specified key from this map.
  - name: size
    return:
      type: int
      notes: the size of this map.
    notes: |-
      Returns the size of this map. The size is defined as the
        number of mappings from keys to values.
  - name: values
    return:
      type: Collection
      generic: Collection<V>
      notes: a collection view of the values in this map.
    notes: |-
      Returns a collection view of the values in this map. The
        collection is not modifiable, but changes to the map are
        reflected in the collection.
