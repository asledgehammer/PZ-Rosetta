# zombie.util.IntCollection
package: zombie.util
type: interface
name: IntCollection
modifiers:
  - public
notes: This interface defines collections of int values.
methods:
  - name: add
    returnType: boolean
    notes: Adds an element to this collection.
  - name: addAll
    returnType: boolean
    notes: |-
      Adds all the elements of a specified collection to
        this collection.
  - name: clear
    returnType: void
    notes: Clears this collection.
  - name: contains
    returnType: boolean
    notes: |-
      Indicates whether this collection contains a specified
        element.
  - name: containsAll
    returnType: boolean
    notes: |-
      Indicates whether all elements of a specified
        collection is contained in this collection.
  - name: equals
    returnType: boolean
    notes: Indicates whether this collection is equal to some object.
  - name: hashCode
    returnType: int
    notes: Returns a hash code value for this collection.
  - name: isEmpty
    returnType: boolean
    notes: Indicates whether this collection is empty.
  - name: iterator
    returnType: IntIterator
    notes: Returns an iterator over this collection.
  - name: remove
    returnType: boolean
    notes: Removes a specified element from this collection.
  - name: removeAll
    returnType: boolean
    notes: |-
      Removes all the elements of a specified collection from
        this collection.
  - name: retainAll
    returnType: boolean
    notes: |-
      Retains only the elements of a specified collection in
        this collection.
  - name: size
    returnType: int
    notes: Returns the number of elements in this collection.
  - name: toArray
    returnType: int[]
    notes: Returns the elements of this collection as an array.
  - name: toArray
    returnType: int[]
    notes: Returns the elements of this collection as an array.
  - name: trimToSize
    returnType: void
    notes: |-
      Minimizes the memory used by this collection. The exact
        operation of this method depends on the class implementing it.
        Implementors may choose to ignore it completely.
