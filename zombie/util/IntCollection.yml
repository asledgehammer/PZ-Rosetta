# zombie.util.IntCollection
package: zombie.util
type: interface
name: IntCollection
modifiers:
  - public
notes: This interface defines collections of int values.
methods:
  - name: add
    return:
      type: boolean
      notes: |-
        true if this collection was modified
                      as a result of adding v; returns
                      false otherwise.
    parameters:
      - name: v
        type: int
        notes: the element to add to this collection.
    notes: Adds an element to this collection.
  - name: addAll
    return:
      type: boolean
      notes: |-
        true if this collection was modified
                      as a result of adding the elements of c;
                      returns false otherwise.
    parameters:
      - name: c
        type: IntCollection
        notes: |-
          the collection whose elements to add to this
                        collection.
    notes: |-
      Adds all the elements of a specified collection to
        this collection.
  - name: clear
    return:
      type: void
    notes: Clears this collection.
  - name: contains
    return:
      type: boolean
      notes: |-
        true if v is contained in this
                      collection; returns false otherwise.
    parameters:
      - name: v
        type: int
        notes: the element to test for containment.
    notes: |-
      Indicates whether this collection contains a specified
        element.
  - name: containsAll
    return:
      type: boolean
      notes: |-
        true if all the elements of c
                      are contained in this collection; returns
                      false otherwise.
    parameters:
      - name: c
        type: IntCollection
        notes: |-
          the collection whose elements to test for
                        containment.
    notes: |-
      Indicates whether all elements of a specified
        collection is contained in this collection.
  - name: equals
    return:
      type: boolean
      notes: |-
        true if this collection is equals to
                      obj; returns false otherwise.
    parameters:
      - name: obj
        type: Object
        notes: the object with which to compare this collection.
    notes: Indicates whether this collection is equal to some object.
  - name: hashCode
    return:
      type: int
      notes: a hash code value for this collection.
    notes: Returns a hash code value for this collection.
  - name: isEmpty
    return:
      type: boolean
      notes: |-
        true if this collection is empty; returns
                      false otherwise.
    notes: Indicates whether this collection is empty.
  - name: iterator
    return:
      type: IntIterator
      notes: an iterator over this collection.
    notes: Returns an iterator over this collection.
  - name: remove
    return:
      type: boolean
      notes: |-
        true if this collection was modified
                      as a result of removing v; returns
                      false otherwise.
    parameters:
      - name: v
        type: int
        notes: the int value to remove from this collection.
    notes: Removes a specified element from this collection.
  - name: removeAll
    return:
      type: boolean
      notes: |-
        true if this collection was modified
                      as a result of removing the elements of c;
                      returns false otherwise.
    parameters:
      - name: c
        type: IntCollection
        notes: |-
          the collection whose elements to remove from this
                        collection.
    notes: |-
      Removes all the elements of a specified collection from
        this collection.
  - name: retainAll
    return:
      type: boolean
      notes: |-
        true if this collection was modified
                      as a result of removing the elements not contained
                      in c;
                      returns false otherwise.
    parameters:
      - name: c
        type: IntCollection
        notes: |-
          the collection whose elements to retain in this
                        collection.
    notes: |-
      Retains only the elements of a specified collection in
        this collection.
  - name: size
    return:
      type: int
      notes: the number of elements in this collection.
    notes: Returns the number of elements in this collection.
  - name: toArray
    return:
      type: int[]
      notes: |-
        a new array containing the elements of this
                      collection.
    notes: Returns the elements of this collection as an array.
  - name: toArray
    return:
      type: int[]
      notes: |-
        a, if a has room for all the
                      elements of this collection; otherwise a new
                      array is allocated, filled with the elements of
                      this collection, and returned.
    parameters:
      - name: a
        type: int[]
        notes: |-
          an array to fill with the elements of this
                        collection; if a is null or not
                        big enough to contain all the elements of this
                        collection, an new array is allocated,
                        and a is not changed.
    notes: Returns the elements of this collection as an array.
  - name: trimToSize
    return:
      type: void
    notes: |-
      Minimizes the memory used by this collection. The exact
        operation of this method depends on the class implementing it.
        Implementors may choose to ignore it completely.
