# zombie.util.list.PZConvertArray&lt;S,
package: zombie.util.list
type: class
name: PZConvertArray&lt;S,
extends: AbstractList
modifiers:
  - public
  - final
constructors:
  - name: PZConvertArray
    modifiers:
      - public
    parameters:
      - name: array
        type: S[]
      - type: Function<S
      - name: converterST
        type: T>
    notes: Create a read-only list converter
  - name: PZConvertArray
    modifiers:
      - public
    parameters:
      - name: array
        type: S[]
      - type: Function<S
      - name: converterST
        type: T>
      - type: Function<T
      - name: converterTS
        type: S>
    notes: Create a read-write list converter
methods:
  - name: contains
    modifiers:
      - public
    returnType: boolean
    parameters:
      - name: o
        type: Object
  - name: forEach
    modifiers:
      - public
    returnType: void
    parameters:
      - name: action
        type: Consumer<? super T>
  - name: get
    modifiers:
      - public
    returnType: T
    parameters:
      - name: index
        type: int
  - name: indexOf
    modifiers:
      - public
    returnType: int
    parameters:
      - name: val
        type: Object
  - name: isReadonly
    modifiers:
      - public
    returnType: boolean
  - name: replaceAll
    modifiers:
      - public
    returnType: void
    parameters:
      - name: operator
        type: UnaryOperator<T>
  - name: set
    modifiers:
      - public
    returnType: T
    parameters:
      - name: index
        type: int
      - name: element
        type: T
  - name: setS
    modifiers:
      - public
    returnType: S
    parameters:
      - name: index
        type: int
      - name: element
        type: S
  - name: size
    modifiers:
      - public
    returnType: int
  - name: sort
    modifiers:
      - public
    returnType: void
    parameters:
      - name: c
        type: Comparator<? super T>
  - name: toArray
    modifiers:
      - public
    returnType: R[]
    parameters:
      - name: result
        type: R[]
