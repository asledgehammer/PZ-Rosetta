# zombie.util.list.PZArrayUtil
package: zombie.util.list
type: class
name: PZArrayUtil
extends: Object
modifiers:
  - public
fields:
  - name: emptyFloatArray
    modifiers:
      - public
      - static
      - final
    returnType: float[]
  - name: emptyIntArray
    modifiers:
      - public
      - static
      - final
    returnType: int[]
constructors:
  - name: PZArrayUtil
    modifiers:
      - public
methods:
  - name: add
    modifiers:
      - public
      - static
    returnType: float[]
    parameters:
      - name: array
        type: float[]
  - name: add
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: array
        type: E[]
  - name: arrayAdd
    modifiers:
      - public
      - static
    returnType: int[]
    parameters:
      - name: in_out_a
        type: int[]
  - name: arrayConvert
    modifiers:
      - public
      - static
    returnType: L
    parameters:
      - name: to
        type: L
      - name: from
        type: " List"
        genericType: " List<S>"
    notes: |-
      Convert all elements in the source array, and add them to the target.
       Uses supplied converter function.
       Clears target before populating.
  - name: arrayCopy
    modifiers:
      - public
      - static
    returnType: L
    parameters:
      - name: to
        type: L
    notes: |-
      Copies all elements from the source array to the target.
       Clears target before populating.
  - name: arrayCopy
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: to
        type: E[]
    notes: |-
      Copies all elements from the source array to the target.
       Clears target before populating.
  - name: arrayCopy
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: to
        type: E[]
    notes: |-
      Copies all elements from the source array to the target.
       Clears target before populating.
  - name: arrayCopy
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: to
        type: E[]
      - name: from
        type: " S[]"
      - name: startIdx
        type: " int"
  - name: arrayCopy
    modifiers:
      - public
      - static
    returnType: float[]
    parameters:
      - name: to
        type: float[]
      - name: from
        type: " float[]"
      - name: startIdx
        type: " int"
  - name: arrayCopy
    modifiers:
      - public
      - static
    returnType: int[]
    parameters:
      - name: to
        type: int[]
      - name: from
        type: " int[]"
      - name: startIdx
        type: " int"
  - name: arrayPopulate
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: arr
        type: E[]
  - name: arraySet
    modifiers:
      - public
      - static
    returnType: int[]
    parameters:
      - name: arr
        type: int[]
  - name: arraySet
    modifiers:
      - public
      - static
    returnType: float[]
    parameters:
      - name: arr
        type: float[]
  - name: arraySet
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: arr
        type: E[]
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
    parameters:
      - name: list
        type: Iterable
        genericType: Iterable<E>
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
    parameters:
      - name: list
        type: float[]
      - name: prefix
        type: " String"
      - name: suffix
        type: " String"
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
    parameters:
      - name: list
        type: E[]
      - name: prefix
        type: " String"
      - name: suffix
        type: " String"
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
    parameters:
      - name: list
        type: Iterable
        genericType: Iterable<E>
      - name: prefix
        type: " String"
      - name: suffix
        type: " String"
  - name: arrayToString
    modifiers:
      - public
      - static
    returnType: String
    parameters:
      - name: list
        type: Iterable
        genericType: Iterable<E>
      - name: toString
        type: " Function"
        genericType: " Function<E,String>"
      - name: prefix
        type: " String"
      - name: suffix
        type: " String"
  - name: clone
    modifiers:
      - public
      - static
    returnType: float[]
  - name: clone
    modifiers:
      - public
      - static
    returnType: E[]
  - name: concat
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: arrayA
        type: E[]
    notes: |-
      Concatenate two arrays.
       null-safe. Allows either A or B parameters to be null or empty.
  - name: contains
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: collection
        type: E[]
  - name: contains
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: collection
        type: List
        genericType: List<E>
  - name: contains
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: it
        type: Collection
        genericType: Collection<E>
  - name: contains
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: it
        type: Iterable
        genericType: Iterable<E>
  - name: contains
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: arr
        type: float[]
      - name: count
        type: " int"
  - name: contains
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: arr
        type: int[]
      - name: count
        type: " int"
  - name: copy
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: target
        type: ArrayList
        genericType: ArrayList<E>
    notes: |-
      Perform a shallow copy of the source array into the target array.
       The target array's contents are replaced with that of the source array.
  - name: copy
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: target
        type: ArrayList
        genericType: ArrayList<E>
      - name: source
        type: " ArrayList"
        genericType: " ArrayList<E>"
    notes: >-
      Perform a copy of the source array into the target array, using the
      supplied ICloner.
       The target array's contents first cleared, and then populated with elements generated using the ICloner.clone() function.
  - name: find
    modifiers:
      - public
      - static
    returnType: E
    parameters:
      - name: collection
        type: List
        genericType: List<E>
  - name: find
    modifiers:
      - public
      - static
    returnType: E
    parameters:
      - name: collection
        type: Iterable
        genericType: Iterable<E>
  - name: forEach
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: list
        type: List
        genericType: List<E>
    notes: >-
      Iterate over specified list, invoke supplied consumer on each element.
        Better GC awareness over List.forEach, avoids use of forEach and iterators.
        Null-safe
  - name: forEach
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: it
        type: Iterable
        genericType: Iterable<E>
    notes: >-
      Iterate over specified Iterable, invoke supplied consumer on each element.
        Better GC awareness over List.forEach, avoids use of forEach and iterators, if the iterable is of type List.
        Null-safe
  - name: forEach
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: elements
        type: E[]
    notes: |-
      Iterate over specified array, invoke supplied consumer on each element.
        Null-safe
  - name: getElementAt
    modifiers:
      - public
      - static
    returnType: E
    parameters:
      - name: collection
        type: Iterable
        genericType: Iterable<E>
    notes: Get the specified element from the supplied Iterable.
  - name: getOrCreate
    modifiers:
      - public
      - static
    returnType: V
    parameters:
      - name: map
        type: HashMap
        genericType: HashMap<K,V>
      - name: key
        type: " K"
  - name: getOrDefault
    modifiers:
      - public
      - static
    returnType: E
    parameters:
      - name: list
        type: List
        genericType: List<E>
    notes: |-
      Get the array value at index.
       Bounds-safe: Returns null value if out of bounds.
  - name: getOrDefault
    modifiers:
      - public
      - static
    returnType: E
    parameters:
      - name: list
        type: List
        genericType: List<E>
      - name: i
        type: " int"
    notes: |-
      Get the array value at index.
       Bounds-safe: Returns default value if out of bounds.
  - name: getOrDefault
    modifiers:
      - public
      - static
    returnType: E
    parameters:
      - name: list
        type: E[]
      - name: i
        type: " int"
    notes: |-
      Get the array value at index.
       Bounds-safe: Returns default value if out of bounds.
  - name: getOrDefault
    modifiers:
      - public
      - static
    returnType: float
    parameters:
      - name: list
        type: float[]
      - name: i
        type: " int"
    notes: |-
      Get the array value at index.
       Bounds-safe: Returns default value if out of bounds.
  - name: getSize
    modifiers:
      - public
      - static
    returnType: int
    notes: Count the number of elements in the supplied Iterable.
  - name: indexOf
    modifiers:
      - public
      - static
    returnType: int
    parameters:
      - name: collection
        type: E[]
  - name: indexOf
    modifiers:
      - public
      - static
    returnType: int
    parameters:
      - name: collection
        type: List
        genericType: List<E>
  - name: indexOf
    modifiers:
      - public
      - static
    returnType: int
    parameters:
      - name: arr
        type: E[]
      - name: count
        type: " int"
  - name: indexOf
    modifiers:
      - public
      - static
    returnType: int
    parameters:
      - name: arr
        type: float[]
      - name: count
        type: " int"
  - name: indexOf
    modifiers:
      - public
      - static
    returnType: int
    parameters:
      - name: arr
        type: int[]
      - name: count
        type: " int"
  - name: insertAt
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: arr
        type: int[]
      - name: insertAt
        type: " int"
  - name: insertAt
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: arr
        type: float[]
      - name: insertAt
        type: " int"
  - name: isNullOrEmpty
    modifiers:
      - public
      - static
    returnType: boolean
  - name: isNullOrEmpty
    modifiers:
      - public
      - static
    returnType: boolean
  - name: isNullOrEmpty
    modifiers:
      - public
      - static
    returnType: boolean
  - name: isNullOrEmpty
    modifiers:
      - public
      - static
    returnType: boolean
  - name: isNullOrEmpty
    modifiers:
      - public
      - static
    returnType: boolean
  - name: itConvert
    modifiers:
      - public
      - static
    returnType: Iterable
    parameters:
      - name: source
        type: Iterable
        genericType: Iterable<S>
  - name: listConvert
    modifiers:
      - public
      - static
    returnType: List
    parameters:
      - name: source
        type: List
        genericType: List<S>
  - name: listConvert
    modifiers:
      - public
      - static
    returnType: List
    parameters:
      - name: source
        type: List
        genericType: List<S>
      - name: dest
        type: " List"
        genericType: " List<E>"
  - name: listConvert
    modifiers:
      - public
      - static
    returnType: List
    parameters:
      - name: source
        type: List
        genericType: List<S>
      - name: dest
        type: " List"
        genericType: " List<E>"
      - name: v1
        type: " T1"
  - name: newInstance
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: componentType
        type: Class
        genericType: Class<?>
  - name: newInstance
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: componentType
        type: Class
        genericType: Class<?>
      - name: length
        type: " int"
  - name: newInstance
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: componentType
        type: Class
        genericType: Class<?>
      - name: reusableArray
        type: " E[]"
  - name: newInstance
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: componentType
        type: Class
        genericType: Class<?>
      - name: reusableArray
        type: " E[]"
      - name: newLength
        type: " int"
  - name: newInstance
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: componentType
        type: Class
        genericType: Class<?>
      - name: reusableArray
        type: " E[]"
      - name: newLength
        type: " int"
  - name: newInstance
    modifiers:
      - public
      - static
    returnType: E[]
    parameters:
      - name: componentType
        type: Class
        genericType: Class<?>
      - name: reusableArray
        type: " E[]"
      - name: newLength
        type: " int"
      - name: growOnly
        type: " boolean"
  - name: pickRandom
    modifiers:
      - public
      - static
    returnType: E
    notes: Pick a random element from the supplied Array.
  - name: pickRandom
    modifiers:
      - public
      - static
    returnType: E
    notes: Pick a random element from the supplied List.
  - name: pickRandom
    modifiers:
      - public
      - static
    returnType: E
    notes: Pick a random element from the supplied Collection.
  - name: pickRandom
    modifiers:
      - public
      - static
    returnType: E
    notes: Pick a random element from the supplied Iterable.
  - name: sequenceEqual
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: a
        type: E[]
  - name: sequenceEqual
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: a
        type: List
        genericType: List<? extends E>
  - name: sequenceEqual
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: a
        type: E[]
      - name: b
        type: " List"
        genericType: " List<? extends E>"
  - name: sequenceEqual
    modifiers:
      - public
      - static
    returnType: boolean
    parameters:
      - name: a
        type: List
        genericType: List<? extends E>
      - name: b
        type: " List"
        genericType: " List<? extends E>"
  - name: sort
    modifiers:
      - public
      - static
    returnType: void
    parameters:
      - name: stack
        type: Stack
        genericType: Stack<E>
  - name: toArray
    modifiers:
      - public
      - static
    returnType: E[]
