{
  "namespaces": {
    "zombie.interfaces": {
      "ICommonSoundEmitter": {
        "methods": [
          {
            "name": "hasSustainPoints",
            "parameters": [
              {
                "name": "handle",
                "type": {
                  "basic": "long"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isEmpty",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isPlaying",
            "parameters": [
              {
                "name": "channel",
                "type": {
                  "basic": "long"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isPlaying",
            "parameters": [
              {
                "name": "alias",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "playSound",
            "parameters": [
              {
                "name": "file",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "long"
              }
            }
          },
          {
            "name": "playSound",
            "parameters": [
              {
                "name": "file",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "doWorldSound",
                "type": {
                  "basic": "boolean"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "long"
              }
            }
          },
          {
            "name": "setPitch",
            "parameters": [
              {
                "name": "handle",
                "type": {
                  "basic": "long"
                }
              },
              {
                "name": "pitch",
                "type": {
                  "basic": "float"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "setPos",
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "z",
                "type": {
                  "basic": "float"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "setVolume",
            "parameters": [
              {
                "name": "handle",
                "type": {
                  "basic": "long"
                }
              },
              {
                "name": "volume",
                "type": {
                  "basic": "float"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "stopOrTriggerSound",
            "parameters": [
              {
                "name": "handle",
                "type": {
                  "basic": "long"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "stopOrTriggerSoundByName",
            "parameters": [
              {
                "name": "name",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "stopSound",
            "parameters": [
              {
                "name": "channel",
                "type": {
                  "basic": "long"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "tick",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "triggerCue",
            "parameters": [
              {
                "name": "handle",
                "type": {
                  "basic": "long"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface",
        "notes": "TurboTuTone."
      },
      "IDestroyable": {
        "methods": [
          {
            "name": "destroy",
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "destory the object"
          },
          {
            "name": "isDestroyed",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            },
            "notes": "returns if the object is destryed or not"
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      },
      "IListBoxItem": {
        "methods": [
          {
            "name": "getLabel",
            "returns": {
              "type": {
                "basic": "String"
              }
            }
          },
          {
            "name": "getLeftLabel",
            "returns": {
              "type": {
                "basic": "String"
              }
            }
          },
          {
            "name": "getRightLabel",
            "returns": {
              "type": {
                "basic": "String"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      },
      "IMaskerable": {
        "methods": [
          {
            "name": "getMask",
            "returns": {
              "type": {
                "basic": "Mask"
              },
              "notes": "the collision mask"
            },
            "notes": "returns the collision mask"
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      },
      "ITexture": {
        "methods": [
          {
            "name": "bind",
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "bind the current texture in the VRAM"
          },
          {
            "name": "bind",
            "parameters": [
              {
                "name": "unit",
                "type": {
                  "basic": "int"
                },
                "notes": "the texture unit in witch the current TextureObject will be binded"
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "bind the current texture object in the specified texture unit"
          },
          {
            "name": "getData",
            "returns": {
              "type": {
                "basic": "WrappedBuffer"
              }
            },
            "notes": "returns the texture's pixel in a ByteBuffer\n\n EXAMPLE:"
          },
          {
            "name": "getHeight",
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "the height of image"
            },
            "notes": "returns the height of image"
          },
          {
            "name": "getHeightHW",
            "returns": {
              "type": {
                "basic": "int"
              }
            },
            "notes": "return the height hardware of image"
          },
          {
            "name": "getID",
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "the ID of image in the Vram"
            },
            "notes": "returns the ID of image in the Vram"
          },
          {
            "name": "getWidth",
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "the width of image"
            },
            "notes": "returns the width of image"
          },
          {
            "name": "getWidthHW",
            "returns": {
              "type": {
                "basic": "int"
              }
            },
            "notes": "return the width Hardware of image"
          },
          {
            "name": "getXEnd",
            "returns": {
              "type": {
                "basic": "float"
              },
              "notes": "the end X-coordinate"
            },
            "notes": "returns the end X-coordinate"
          },
          {
            "name": "getXStart",
            "returns": {
              "type": {
                "basic": "float"
              },
              "notes": "the start X-coordinate"
            },
            "notes": "returns the start X-coordinate"
          },
          {
            "name": "getYEnd",
            "returns": {
              "type": {
                "basic": "float"
              },
              "notes": "the end Y-coordinate"
            },
            "notes": "returns the end Y-coordinate"
          },
          {
            "name": "getYStart",
            "returns": {
              "type": {
                "basic": "float"
              },
              "notes": "the start Y-coordinate"
            },
            "notes": "returns the start Y-coordinate"
          },
          {
            "name": "isSolid",
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "if the texture is solid or not."
            },
            "notes": "indicates if the texture is solid or not."
          },
          {
            "name": "makeTransp",
            "parameters": [
              {
                "name": "red",
                "type": {
                  "basic": "int"
                },
                "notes": "color used in the test"
              },
              {
                "name": "green",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "blue",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "sets transparent each pixel that it's equal to the red, green blue value specified"
          },
          {
            "name": "setAlphaForeach",
            "parameters": [
              {
                "name": "red",
                "type": {
                  "basic": "int"
                },
                "notes": "color used in the test"
              },
              {
                "name": "green",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "blue",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "alpha",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "sets the specified alpha for each pixel that it's equal to the red, green blue value specified"
          },
          {
            "name": "setData",
            "parameters": [
              {
                "name": "data",
                "type": {
                  "basic": "ByteBuffer"
                },
                "notes": "texture's pixel data"
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "sets the texture's pixel from a ByteBuffer\n\n EXAMPLE:"
          },
          {
            "name": "setMask",
            "parameters": [
              {
                "name": "mask",
                "type": {
                  "basic": "Mask"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Pixel collision mask of texture"
          },
          {
            "name": "setRegion",
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "int"
                },
                "notes": "xstart position"
              },
              {
                "name": "y",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "width",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "height",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "sets the region of the image"
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface",
        "extends": "IDestroyable"
      },
      "IUpdater": {
        "methods": [
          {
            "name": "render",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "renderlast",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "update",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      }
    }
  }
}