{
  "namespaces": {
    "zombie.core.input": {
      "Input": {
        "fields": {
          "ANY_CONTROLLER": {
            "name": "ANY_CONTROLLER",
            "modifiers": [
              "public",
              "static",
              "final"
            ],
            "type": {
              "basic": "int"
            },
            "notes": "The controller index to pass to check all controllers"
          }
        },
        "constructors": [
          {
            "modifiers": [
              "public"
            ]
          }
        ],
        "methods": [
          {
            "name": "getAxisCount",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The number of axis available on the controller"
            },
            "notes": "get the number of axis that are avaiable on a given controller"
          },
          {
            "name": "getAxisName",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              },
              {
                "name": "axis",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "String"
              },
              "notes": "The name of the specified axis"
            },
            "notes": "get the name of the axis with the given index"
          },
          {
            "name": "getAxisValue",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              },
              {
                "name": "axis",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "float"
              },
              "notes": "The axis value at time of reading"
            },
            "notes": "get the value of the axis with the given index"
          },
          {
            "name": "getButtonCount",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getButtonName",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "button",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "String"
              }
            }
          },
          {
            "name": "getController",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "org.lwjglx.input.Controller"
              }
            }
          },
          {
            "name": "getControllerCount",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The number of controllers available"
            },
            "notes": "get a count of the number of controllers available"
          },
          {
            "name": "getKeyCode",
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "keyName",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getKeyName",
            "modifiers": [
              "public",
              "static"
            ],
            "parameters": [
              {
                "name": "code",
                "type": {
                  "basic": "int"
                },
                "notes": "The key code of the key to retrieve the name of"
              }
            ],
            "returns": {
              "type": {
                "basic": "String"
              },
              "notes": "The name or character representation of the key requested"
            },
            "notes": "get the character representation of the key identified by the specified code"
          },
          {
            "name": "initControllers",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Initialise the controllers system"
          },
          {
            "name": "isButtonPressedD",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "button",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "True if the button is pressed"
            },
            "notes": "Check if controller button is pressed"
          },
          {
            "name": "isButtonReleasePress",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "button",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isButtonStartPress",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "button",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isControllerDownD",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "True if the controller is pressed to the down"
            },
            "notes": "Check if the controller has the down direction pressed"
          },
          {
            "name": "isControllerLeftD",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "True if the controller is pressed to the left"
            },
            "notes": "Check if the controller has the left direction pressed"
          },
          {
            "name": "isControllerRightD",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "True if the controller is pressed to the right"
            },
            "notes": "Check if the controller has the right direction pressed"
          },
          {
            "name": "isControllerUpD",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The index of the controller to check"
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "True if the controller is pressed to the up"
            },
            "notes": "Check if the controller has the up direction pressed"
          },
          {
            "name": "poll",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Poll the state of the input"
          },
          {
            "name": "quit",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "updateGameThread",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "wasButtonPressed",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "index",
                "type": {
                  "basic": "int"
                },
                "notes": "The controller index."
              },
              {
                "name": "button",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              },
              "notes": "true if the controller button was in the pressed state the previous frame."
            },
            "notes": "Check if a controller button was pressed the previous frame."
          }
        ],
        "modifiers": [
          "public",
          "final"
        ],
        "javaType": "class",
        "extends": "Object",
        "notes": "A wrapped for all keyboard, mouse and controller input"
      }
    }
  }
}