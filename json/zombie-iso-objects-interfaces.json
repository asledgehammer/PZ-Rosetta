{
  "namespaces": {
    "zombie.iso.objects.interfaces": {
      "Activatable": {
        "methods": [
          {
            "name": "Activated",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "getActivatableType",
            "returns": {
              "type": {
                "basic": "String"
              }
            }
          },
          {
            "name": "Toggle",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      },
      "BarricadeAble": {
        "methods": [
          {
            "name": "getBarricadeForCharacter",
            "parameters": [
              {
                "name": "chr",
                "type": {
                  "basic": "IsoGameCharacter"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "IsoBarricade"
              }
            }
          },
          {
            "name": "getBarricadeOnOppositeSquare",
            "returns": {
              "type": {
                "basic": "IsoBarricade"
              }
            }
          },
          {
            "name": "getBarricadeOnSameSquare",
            "returns": {
              "type": {
                "basic": "IsoBarricade"
              }
            }
          },
          {
            "name": "getBarricadeOppositeCharacter",
            "parameters": [
              {
                "name": "chr",
                "type": {
                  "basic": "IsoGameCharacter"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "IsoBarricade"
              }
            }
          },
          {
            "name": "getNorth",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "getOppositeSquare",
            "returns": {
              "type": {
                "basic": "IsoGridSquare"
              }
            }
          },
          {
            "name": "getSquare",
            "returns": {
              "type": {
                "basic": "IsoGridSquare"
              }
            }
          },
          {
            "name": "isBarricadeAllowed",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isBarricaded",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      },
      "IClothingWasherDryerLogic": {
        "methods": [
          {
            "name": "getContainer",
            "returns": {
              "type": {
                "basic": "ItemContainer"
              }
            }
          },
          {
            "name": "isActivated",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isItemAllowedInContainer",
            "parameters": [
              {
                "name": "container",
                "type": {
                  "basic": "ItemContainer"
                }
              },
              {
                "name": "item",
                "type": {
                  "basic": "InventoryItem"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "isRemoveItemAllowedFromContainer",
            "parameters": [
              {
                "name": "container",
                "type": {
                  "basic": "ItemContainer"
                }
              },
              {
                "name": "item",
                "type": {
                  "basic": "InventoryItem"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "loadChange",
            "parameters": [
              {
                "name": "change",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "bb",
                "type": {
                  "basic": "ByteBuffer"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "saveChange",
            "parameters": [
              {
                "name": "change",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "tbl",
                "type": {
                  "basic": "se.krka.kahlua.vm.KahluaTable"
                }
              },
              {
                "name": "bb",
                "type": {
                  "basic": "ByteBuffer"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "setActivated",
            "parameters": [
              {
                "name": "activated",
                "type": {
                  "basic": "boolean"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "switchModeOff",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "switchModeOn",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "update",
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      },
      "Thumpable": {
        "methods": [
          {
            "name": "getThumpableFor",
            "parameters": [
              {
                "name": "chr",
                "type": {
                  "basic": "IsoGameCharacter"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "Thumpable"
              }
            }
          },
          {
            "name": "getThumpCondition",
            "returns": {
              "type": {
                "basic": "float"
              }
            }
          },
          {
            "name": "isDestroyed",
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "Thump",
            "parameters": [
              {
                "name": "thumper",
                "type": {
                  "basic": "IsoMovingObject"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "WeaponHit",
            "parameters": [
              {
                "name": "chr",
                "type": {
                  "basic": "IsoGameCharacter"
                }
              },
              {
                "name": "weapon",
                "type": {
                  "basic": "HandWeapon"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      }
    }
  }
}