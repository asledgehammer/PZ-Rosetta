{
  "namespaces": {
    "zombie.core.fonts": {
      "AngelCodeFont": {
        "fields": {
          "chars": {
            "name": "chars",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "AngelCodeFont.CharDef"
            },
            "notes": "The characters building up the font"
          },
          "curA": {
            "name": "curA",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "float"
            }
          },
          "curB": {
            "name": "curB",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "float"
            }
          },
          "curCol": {
            "name": "curCol",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "Color"
            }
          },
          "curG": {
            "name": "curG",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "float"
            }
          },
          "curR": {
            "name": "curR",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "float"
            }
          },
          "xoff": {
            "name": "xoff",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "int"
            }
          },
          "yoff": {
            "name": "yoff",
            "modifiers": [
              "public",
              "static"
            ],
            "type": {
              "basic": "int"
            }
          }
        },
        "constructors": [
          {
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "fntFile",
                "type": {
                  "basic": "String"
                },
                "notes": "The location of the font defnition file"
              },
              {
                "name": "image",
                "type": {
                  "basic": "Texture"
                }
              }
            ],
            "notes": "Create a new font based on a font definition from AngelCode's tool and\n the font image generated from the tool."
          },
          {
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "fntFile",
                "type": {
                  "basic": "String"
                },
                "notes": "The location of the font defnition file"
              },
              {
                "name": "imgFile",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "notes": "Create a new font based on a font definition from AngelCode's tool and\n the font image generated from the tool."
          }
        ],
        "methods": [
          {
            "name": "destroy",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x location at which to draw the string"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Description copied from interface: Font"
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x location at which to draw the string"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "col",
                "type": {
                  "basic": "Color"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Description copied from interface: Font"
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "r",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "g",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "a",
                "type": {
                  "basic": "float"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "scale",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "r",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "g",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "a",
                "type": {
                  "basic": "float"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x location at which to draw the string"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "col",
                "type": {
                  "basic": "Color"
                }
              },
              {
                "name": "startIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "endIndex",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Description copied from interface: Font"
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "r",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "g",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "a",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "startIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "endIndex",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "drawString",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "scale",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "r",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "g",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "b",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "a",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "startIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "endIndex",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "getHeight",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "text",
                "type": {
                  "basic": "String"
                },
                "notes": "The string to obtain the rendered with of"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The width of the given string"
            },
            "notes": "Description copied from interface: Font"
          },
          {
            "name": "getLineHeight",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The maxium height of any line drawn by this font"
            },
            "notes": "Description copied from interface: Font"
          },
          {
            "name": "getWidth",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "text",
                "type": {
                  "basic": "String"
                },
                "notes": "The string to obtain the rendered with of"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The width of the given string"
            },
            "notes": "Description copied from interface: Font"
          },
          {
            "name": "getWidth",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "xAdvance",
                "type": {
                  "basic": "boolean"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getWidth",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "start",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "end",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getWidth",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "start",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "end",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "xadvance",
                "type": {
                  "basic": "boolean"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getYOffset",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "text",
                "type": {
                  "basic": "String"
                },
                "notes": "The text that is to be tested"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The yoffset from the y draw location at which text will start"
            },
            "notes": "Returns the distance from the y drawing location to the top most pixel of the specified text."
          },
          {
            "name": "isEmpty",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "boolean"
              }
            }
          },
          {
            "name": "onStateChanged",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "oldState",
                "type": {
                  "basic": "Asset.State"
                }
              },
              {
                "name": "newState",
                "type": {
                  "basic": "Asset.State"
                }
              },
              {
                "name": "asset",
                "type": {
                  "basic": "Asset"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public",
          "final"
        ],
        "javaType": "class",
        "extends": "Object",
        "notes": "A font implementation that will parse BMFont format font files. The font files can be output\n by Hiero, which is included with Slick, and also the AngelCode font tool available at:"
      },
      "AngelCodeFont.CharDef": {
        "fields": {
          "dlIndex": {
            "name": "dlIndex",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The display list index for this character"
          },
          "height": {
            "name": "height",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The height of the character image"
          },
          "id": {
            "name": "id",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "int"
            },
            "notes": "The id of the character"
          },
          "image": {
            "name": "image",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "Texture"
            },
            "notes": "The image containing the character"
          },
          "kerningAmount": {
            "name": "kerningAmount",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short[]"
            }
          },
          "kerningSecond": {
            "name": "kerningSecond",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short[]"
            },
            "notes": "The kerning info for this character"
          },
          "page": {
            "name": "page",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The page number for fonts with multiple textures"
          },
          "width": {
            "name": "width",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The width of the character image"
          },
          "x": {
            "name": "x",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The x location on the sprite sheet"
          },
          "xadvance": {
            "name": "xadvance",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The amount to move the current position after drawing the character"
          },
          "xoffset": {
            "name": "xoffset",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The amount the x position should be offset when drawing the image"
          },
          "y": {
            "name": "y",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The y location on the sprite sheet"
          },
          "yoffset": {
            "name": "yoffset",
            "modifiers": [
              "public"
            ],
            "type": {
              "basic": "short"
            },
            "notes": "The amount the y position should be offset when drawing the image"
          }
        },
        "constructors": [
          {
            "modifiers": [
              "public"
            ]
          }
        ],
        "methods": [
          {
            "name": "destroy",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          },
          {
            "name": "draw",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x position at which to draw the text"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Draw this character embedded in a image draw"
          },
          {
            "name": "getKerning",
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "otherCodePoint",
                "type": {
                  "basic": "int"
                },
                "notes": "The other code point"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "the kerning offset"
            },
            "notes": "get the kerning offset between this character and the specified character."
          },
          {
            "name": "init",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Initialise the image by cutting the right section from the map\n produced by the AngelCode tool."
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "class",
        "extends": "Object",
        "notes": "The definition of a single character as defined in the AngelCode file\n format"
      },
      "AngelCodeFont.CharDefTexture": {
        "constructors": [
          {
            "modifiers": [
              "public"
            ],
            "parameters": [
              {
                "name": "data",
                "type": {
                  "basic": "TextureID"
                }
              },
              {
                "name": "name",
                "type": {
                  "basic": "String"
                }
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "releaseCharDef",
            "modifiers": [
              "public"
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            }
          }
        ],
        "modifiers": [
          "public",
          "static",
          "final"
        ],
        "javaType": "class",
        "extends": "Texture"
      },
      "Font": {
        "methods": [
          {
            "name": "drawString",
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x location at which to draw the string"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Draw a string to the screen"
          },
          {
            "name": "drawString",
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x location at which to draw the string"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "col",
                "type": {
                  "basic": "Color"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Draw a string to the screen"
          },
          {
            "name": "drawString",
            "parameters": [
              {
                "name": "x",
                "type": {
                  "basic": "float"
                },
                "notes": "The x location at which to draw the string"
              },
              {
                "name": "y",
                "type": {
                  "basic": "float"
                }
              },
              {
                "name": "text",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "col",
                "type": {
                  "basic": "Color"
                }
              },
              {
                "name": "startIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "endIndex",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "void"
              }
            },
            "notes": "Draw part of a string to the screen. Note that this will\n still position the text as though it's part of the bigger string."
          },
          {
            "name": "getHeight",
            "parameters": [
              {
                "name": "str",
                "type": {
                  "basic": "String"
                },
                "notes": "The string to obtain the rendered with of"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The width of the given string"
            },
            "notes": "get the height of the given string"
          },
          {
            "name": "getLineHeight",
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The maxium height of any line drawn by this font"
            },
            "notes": "get the maximum height of any line drawn by this font"
          },
          {
            "name": "getWidth",
            "parameters": [
              {
                "name": "str",
                "type": {
                  "basic": "String"
                },
                "notes": "The string to obtain the rendered with of"
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              },
              "notes": "The width of the given string"
            },
            "notes": "get the width of the given string"
          },
          {
            "name": "getWidth",
            "parameters": [
              {
                "name": "str",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "xAdvance",
                "type": {
                  "basic": "boolean"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getWidth",
            "parameters": [
              {
                "name": "str",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "startIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "endIndex",
                "type": {
                  "basic": "int"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          },
          {
            "name": "getWidth",
            "parameters": [
              {
                "name": "str",
                "type": {
                  "basic": "String"
                }
              },
              {
                "name": "startIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "endIndex",
                "type": {
                  "basic": "int"
                }
              },
              {
                "name": "xAdvance",
                "type": {
                  "basic": "boolean"
                }
              }
            ],
            "returns": {
              "type": {
                "basic": "int"
              }
            }
          }
        ],
        "modifiers": [
          "public"
        ],
        "javaType": "interface"
      }
    }
  }
}