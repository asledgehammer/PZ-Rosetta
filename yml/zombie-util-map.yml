namespaces:
  zombie.util.map:
    AbstractIntKeyMap:
      methods:
        - name: clear
          modifiers:
            - public
          returns:
            type:
              basic: void
          notes: Description copied from interface: IntKeyMap
        - name: containsKey
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key to test for.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map contains a mapping from
                            the specified key; returns false
                            otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: containsValue
          modifiers:
            - public
          parameters:
            - name: value
              type:
                basic: Object
              notes: the value to test for.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map contains at least one
                            mapping to the specified value; returns
                            false otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: equals
          modifiers:
            - public
          parameters:
            - name: obj
              type:
                basic: Object
              notes: the object with which to compare this map.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map is equal to the
                            specified object; returns false
                            otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: get
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key to map to a value.
          returns:
            type:
              basic: V
            notes: |-
              the value that the specified key maps to; returns
                            null, if no mapping exists for the
                            specified key.
          notes: Description copied from interface: IntKeyMap
        - name: hashCode
          modifiers:
            - public
          returns:
            type:
              basic: int
            notes: a hash code value for this map.
          notes: Description copied from interface: IntKeyMap
        - name: isEmpty
          modifiers:
            - public
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map is empty; returns
                            false otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: putAll
          modifiers:
            - public
          parameters:
            - name: map
              type:
                basic: IntKeyMap
                full: IntKeyMap<V>
              notes: the map whose mappings to add to this map.
          returns:
            type:
              basic: void
          notes: Description copied from interface: IntKeyMap
        - name: remove
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key whose mapping to remove from this map.
          returns:
            type:
              basic: V
            notes: |-
              the old value (which can be null) if a
                            mapping from the specified key already existed
                            in this map; returns null otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: size
          modifiers:
            - public
          returns:
            type:
              basic: int
            notes: the size of this map.
          notes: Description copied from interface: IntKeyMap
        - name: trimToSize
          modifiers:
            - public
          returns:
            type:
              basic: void
          notes: |-
            Does nothing. Sub-classes may provide an implementation to
              minimize memory usage, but this is not required since many
              implementations will always have minimal memory usage.
      modifiers:
        - public
        - abstract
      javaType: class
      extends: Object
      notes: >-
        This class represents an abstract base for implementing
          maps from int values to objects. All operations that can be implemented
          using iterators
          are implemented as such. In most cases, this is
          hardly an efficient solution, and at least some of those
          methods should be overridden by sub-classes.
    IntKeyMap:
      methods:
        - name: clear
          returns:
            type:
              basic: void
          notes: Clears this map.
        - name: containsKey
          parameters:
            - name: key
              type:
                basic: int
              notes: the key to test for.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map contains a mapping from
                            the specified key; returns false
                            otherwise.
          notes: |-
            Indicates whether this map contains a mapping from a specified
              key.
        - name: containsValue
          parameters:
            - name: value
              type:
                basic: Object
              notes: the value to test for.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map contains at least one
                            mapping to the specified value; returns
                            false otherwise.
          notes: |-
            Indicates whether this map contains a mapping to a specified
              value.
        - name: entries
          returns:
            type:
              basic: IntKeyMapIterator
            notes: an iterator over the entries of this map.
          notes: |-
            Returns an iterator over the entries of this map. It is
              possible to remove entries from this map using the iterator
              provided that the concrete map supports removal of
              entries.
        - name: equals
          parameters:
            - name: obj
              type:
                basic: Object
              notes: the object with which to compare this map.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map is equal to the
                            specified object; returns false
                            otherwise.
          notes: Indicates whether this map is equal to some object.
        - name: get
          parameters:
            - name: key
              type:
                basic: int
              notes: the key to map to a value.
          returns:
            type:
              basic: V
            notes: |-
              the value that the specified key maps to; returns
                            null, if no mapping exists for the
                            specified key.
          notes: Maps a specified key to a value.
        - name: hashCode
          returns:
            type:
              basic: int
            notes: a hash code value for this map.
          notes: Returns a hash code value for this map.
        - name: isEmpty
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map is empty; returns
                            false otherwise.
          notes: Indicates whether this map is empty.
        - name: keySet
          returns:
            type:
              basic: IntSet
            notes: a set view of the keys of this map.
          notes: |-
            Returns a set view of the keys of this map. The set is not
              directly modifiable, but changes to the map are reflected in
              the set.
        - name: put
          parameters:
            - name: key
              type:
                basic: int
              notes: the key of the mapping to add to this map.
            - name: value
              type:
                basic: V
          returns:
            type:
              basic: V
            notes: |-
              the old value (which can be null) if a
                            mapping from the specified key already existed
                            in this map; returns null otherwise.
          notes: |-
            Adds a mapping from a specified key to a specified value to
              this map. If a mapping already exists for the specified key
              it is overwritten by the new mapping.
        - name: putAll
          parameters:
            - name: map
              type:
                basic: IntKeyMap
                full: IntKeyMap<V>
              notes: the map whose mappings to add to this map.
          returns:
            type:
              basic: void
          notes: |-
            Adds all mappings from a specified map to this map. Any
              existing mappings whose keys collide with a new mapping is
              overwritten by the new mapping.
        - name: remove
          parameters:
            - name: key
              type:
                basic: int
              notes: the key whose mapping to remove from this map.
          returns:
            type:
              basic: V
            notes: |-
              the old value (which can be null) if a
                            mapping from the specified key already existed
                            in this map; returns null otherwise.
          notes: Removes the mapping from a specified key from this map.
        - name: size
          returns:
            type:
              basic: int
            notes: the size of this map.
          notes: |-
            Returns the size of this map. The size is defined as the
              number of mappings from keys to values.
        - name: values
          returns:
            type:
              basic: Collection
            notes: a collection view of the values in this map.
          notes: |-
            Returns a collection view of the values in this map. The
              collection is not modifiable, but changes to the map are
              reflected in the collection.
      modifiers:
        - public
      javaType: interface
      notes: This interface represents maps from int values to objects.
    IntKeyMapIterator:
      methods:
        - name: getKey
          returns:
            type:
              basic: int
            notes: the key of the current entry of this iterator.
          notes: Returns the key of the current entry of this iterator.
        - name: getValue
          returns:
            type:
              basic: V
            notes: |-
              the value of the current entry of this iterator
                            (which may be null).
          notes: Returns the value of the current entry of this iterator.
        - name: hasNext
          returns:
            type:
              basic: boolean
            notes: |-
              true if more int entries can be returned
                            by this iterator; returns false
                            otherwise.
          notes: |-
            Indicates whether more entries can be returned by this
              iterator.
        - name: next
          returns:
            type:
              basic: void
          notes: Advances to the next entry of this iterator.
        - name: remove
          returns:
            type:
              basic: void
          notes: |-
            Removes the last entry value returned from the underlying
              map.
      modifiers:
        - public
      javaType: interface
      notes: |-
        This interface represents iterators over maps from
          int values to objects.
    IntKeyOpenHashMap:
      fields:
        DEFAULT_CAPACITY:
          name: DEFAULT_CAPACITY
          modifiers:
            - public
            - static
            - final
          type:
            basic: int
          notes: The default capacity of this map.
        DEFAULT_GROWTH_CHUNK:
          name: DEFAULT_GROWTH_CHUNK
          modifiers:
            - public
            - static
            - final
          type:
            basic: int
          notes: The default chunk size with which to increase the capacity of this map.
        DEFAULT_GROWTH_FACTOR:
          name: DEFAULT_GROWTH_FACTOR
          modifiers:
            - public
            - static
            - final
          type:
            basic: double
          notes: The default factor with which to increase the capacity of this map.
        DEFAULT_LOAD_FACTOR:
          name: DEFAULT_LOAD_FACTOR
          modifiers:
            - public
            - static
            - final
          type:
            basic: double
          notes: The default load factor of this map.
      constructors:
        - modifiers:
            - public
          notes: |-
            Creates a new hash map with capacity 11, a relative
              growth factor of 1.0, and a load factor of 75%.
        - modifiers:
            - public
          parameters:
            - name: map
              type:
                basic: IntKeyMap
                full: IntKeyMap<V>
              notes: the map whose mappings to put into the new map.
          notes: Creates a new hash map with the same mappings as a specified map.
        - modifiers:
            - public
          parameters:
            - name: capacity
              type:
                basic: int
              notes: the initial capacity of the map.
          notes: |-
            Creates a new hash map with a specified capacity, a relative
              growth factor of 1.0, and a load factor of 75%.
        - modifiers:
            - public
          parameters:
            - name: loadFactor
              type:
                basic: double
              notes: the load factor of the map.
          notes: |-
            Creates a new hash map with a capacity of 11, a relative
              growth factor of 1.0, and a specified load factor.
        - modifiers:
            - public
          parameters:
            - name: capacity
              type:
                basic: int
              notes: the initial capacity of the map.
            - name: loadFactor
              type:
                basic: double
          notes: |-
            Creates a new hash map with a specified capacity and
              load factor, and a relative growth factor of 1.0.
        - modifiers:
            - public
          parameters:
            - name: capacity
              type:
                basic: int
              notes: the initial capacity of the map.
            - name: loadFactor
              type:
                basic: double
            - name: growthFactor
              type:
                basic: double
          notes: |-
            Creates a new hash map with a specified capacity,
              load factor, and relative growth factor.
        - modifiers:
            - public
          parameters:
            - name: capacity
              type:
                basic: int
              notes: the initial capacity of the map.
            - name: loadFactor
              type:
                basic: double
            - name: growthChunk
              type:
                basic: int
          notes: |-
            Creates a new hash map with a specified capacity,
              load factor, and absolute growth factor.
        - modifiers:
            - public
          parameters:
            - name: keyhash
              type:
                basic: IntHashFunction
              notes: the hash function to use when hashing keys.
          notes: |-
            Creates a new hash map with capacity 11, a relative
              growth factor of 1.0, and a load factor of 75%.
        - modifiers:
            - public
          parameters:
            - name: keyhash
              type:
                basic: IntHashFunction
              notes: the hash function to use when hashing keys.
            - name: capacity
              type:
                basic: int
          notes: |-
            Creates a new hash map with a specified capacity, a relative
              growth factor of 1.0, and a load factor of 75%.
        - modifiers:
            - public
          parameters:
            - name: keyhash
              type:
                basic: IntHashFunction
              notes: the hash function to use when hashing keys.
            - name: loadFactor
              type:
                basic: double
          notes: |-
            Creates a new hash map with a capacity of 11, a relative
              growth factor of 1.0, and a specified load factor.
        - modifiers:
            - public
          parameters:
            - name: keyhash
              type:
                basic: IntHashFunction
              notes: the hash function to use when hashing keys.
            - name: capacity
              type:
                basic: int
            - name: loadFactor
              type:
                basic: double
          notes: |-
            Creates a new hash map with a specified capacity and
              load factor, and a relative growth factor of 1.0.
        - modifiers:
            - public
          parameters:
            - name: keyhash
              type:
                basic: IntHashFunction
              notes: the hash function to use when hashing keys.
            - name: capacity
              type:
                basic: int
            - name: loadFactor
              type:
                basic: double
            - name: growthFactor
              type:
                basic: double
          notes: |-
            Creates a new hash map with a specified capacity,
              load factor, and relative growth factor.
        - modifiers:
            - public
          parameters:
            - name: keyhash
              type:
                basic: IntHashFunction
              notes: the hash function to use when hashing keys.
            - name: capacity
              type:
                basic: int
            - name: loadFactor
              type:
                basic: double
            - name: growthChunk
              type:
                basic: int
          notes: |-
            Creates a new hash map with a specified capacity,
              load factor, and absolute growth factor.
      methods:
        - name: clear
          modifiers:
            - public
          returns:
            type:
              basic: void
          notes: Description copied from interface: IntKeyMap
        - name: clone
          modifiers:
            - public
          returns:
            type:
              basic: Object
            notes: a clone of this hash map.
          notes: Returns a clone of this hash map.
        - name: containsKey
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key to test for.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map contains a mapping from
                            the specified key; returns false
                            otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: containsValue
          modifiers:
            - public
          parameters:
            - name: value
              type:
                basic: Object
              notes: the value to test for.
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map contains at least one
                            mapping to the specified value; returns
                            false otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: entries
          modifiers:
            - public
          returns:
            type:
              basic: IntKeyMapIterator
            notes: an iterator over the entries of this map.
          notes: Description copied from interface: IntKeyMap
        - name: get
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key to map to a value.
          returns:
            type:
              basic: V
            notes: |-
              the value that the specified key maps to; returns
                            null, if no mapping exists for the
                            specified key.
          notes: Description copied from interface: IntKeyMap
        - name: isEmpty
          modifiers:
            - public
          returns:
            type:
              basic: boolean
            notes: |-
              true if this map is empty; returns
                            false otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: keySet
          modifiers:
            - public
          returns:
            type:
              basic: IntSet
            notes: a set view of the keys of this map.
          notes: Description copied from interface: IntKeyMap
        - name: put
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key of the mapping to add to this map.
            - name: value
              type:
                basic: V
          returns:
            type:
              basic: V
            notes: |-
              the old value (which can be null) if a
                            mapping from the specified key already existed
                            in this map; returns null otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: remove
          modifiers:
            - public
          parameters:
            - name: key
              type:
                basic: int
              notes: the key whose mapping to remove from this map.
          returns:
            type:
              basic: V
            notes: |-
              the old value (which can be null) if a
                            mapping from the specified key already existed
                            in this map; returns null otherwise.
          notes: Description copied from interface: IntKeyMap
        - name: size
          modifiers:
            - public
          returns:
            type:
              basic: int
            notes: the size of this map.
          notes: Description copied from interface: IntKeyMap
        - name: values
          modifiers:
            - public
          returns:
            type:
              basic: Collection
            notes: a collection view of the values in this map.
          notes: Description copied from interface: IntKeyMap
      modifiers:
        - public
      javaType: class
      extends: AbstractIntKeyMap
      notes: |-
        This class represents open addressing hash table based maps from
          int values to objects.
    MapDefaults:
      constructors:
        - modifiers:
            - public
      methods:
        - name: defaultInt
          modifiers:
            - public
            - static
          returns:
            type:
              basic: int
            notes: a default int value (0).
          notes: Returns a default int value (
      modifiers:
        - public
      javaType: class
      extends: Object
      notes: |-
        This class implements methods for retrieving default values for
          each of the primitive types. The default values are returned by
          the maps'
    NoSuchMappingException:
      constructors:
        - modifiers:
            - public
          parameters:
            - name: s
              type:
                basic: String
              notes: the detail message.
          notes: |-
            Creates a new exception with a specified detail message.
              The message indicates the key of the mapping that was
              not available.
      modifiers:
        - public
      javaType: class
      extends: RuntimeException
      notes: |-
        Thrown to indicate that an attempt was made to retrieve a
          non-existing mapping in a map.
